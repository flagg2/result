{
   "env": {
      "browser": true,
      "es2021": true
   },
   "overrides": [],
   "parser": "@typescript-eslint/parser",
   "parserOptions": {
      "ecmaVersion": "latest",
      "sourceType": "module",
      "project": "./tsconfig.json"
   },
   "plugins": ["@typescript-eslint"],
   "rules": {
      "array-callback-return": "warn",
      "constructor-super": "error",
      "for-direction": "error",
      "getter-return": "error",
      "no-async-promise-executor": "error",
      "no-await-in-loop": "warn",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-cond-assign": "error",
      "no-const-assign": "error",
      "no-constant-binary-expression": "error",
      "no-constant-condition": "error",
      "no-constructor-return": "error",
      "no-control-regex": "error",
      "no-debugger": "error",
      "no-dupe-args": "error",
      "@typescript-eslint/no-dupe-class-members": "error",
      "no-dupe-else-if": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-duplicate-imports": "warn",
      "no-empty-character-class": "error",
      "no-empty-pattern": "error",
      "no-ex-assign": "error",
      "no-fallthrough": "error",
      "no-func-assign": "error",
      "no-import-assign": "error",
      "no-inner-declarations": ["error", "both"],
      "no-invalid-regexp": "error",
      "no-irregular-whitespace": "error",
      "@typescript-eslint/no-loss-of-precision": "error",
      "no-misleading-character-class": "error",
      "no-new-native-nonconstructor": "error",
      "no-new-symbol": "error",
      "no-obj-calls": "error",
      "no-promise-executor-return": "off",
      "no-prototype-builtins": "error",
      "no-self-assign": "error",
      "no-self-compare": "error",
      "no-setter-return": "error",
      "no-sparse-arrays": "error",
      "no-template-curly-in-string": "error",
      "no-this-before-super": "error",
      "no-undef": "warn",
      "no-unexpected-multiline": "error",
      "no-unmodified-loop-condition": "error",
      "no-unreachable": "error",
      "no-unreachable-loop": "error",
      "no-unsafe-finally": "error",
      "no-unsafe-negation": "error",
      "no-unsafe-optional-chaining": "error",
      "@typescript-eslint/no-unused-vars": "warn",
      "@typescript-eslint/no-use-before-define": "off",
      "no-useless-backreference": "error",
      "require-atomic-updates": "error",
      "use-isnan": "error",
      "valid-typeof": "error",
      "accessor-pairs": "warn",
      "arrow-body-style": ["warn", "as-needed"],
      "block-scoped-var": "error",
      // replace with naming-convention
      // "camelcase": [
      //    "warn",
      //    {
      //       "ignoreDestructuring": true,
      //       "ignoreImports": true,
      //       "ignoreGlobals": true
      //    }
      // ],
      "capitalized-comments": "off",
      "class-methods-use-this": "off",
      "complexity": "off",
      "consistent-this": "error",
      "curly": ["error", "all"],
      "default-case": "off",
      "default-case-last": "error",
      "@typescript-eslint/default-param-last": "error",
      "@typescript-eslint/dot-notation": "warn",
      "eqeqeq": ["error", "always"],
      "func-name-matching": "off",
      "func-names": "off",
      "func-style": ["error", "declaration"],
      "grouped-accessor-pairs": "warn",
      "guard-for-in": "error",
      "id-denylist": "off",
      "id-length": [
         "warn",
         { "min": 2, "max": 30, "exceptions": ["i", "j", "k", "e"] }
      ],
      "id-match": "off",
      "init-declarations": "off",
      "max-classes-per-file": "off",
      "max-depth": ["warn", 3],
      "max-lines": ["warn", 500],
      "max-lines-per-function": [
         "warn",
         { "max": 30, "skipBlankLines": true, "skipComments": true }
      ],
      "max-nested-callbacks": ["warn", 3],
      "max-params": ["warn", 4],
      "max-statements": ["warn", 20],
      "multiline-comment-style": ["warn", "separate-lines"],
      "new-cap": "warn",
      "no-alert": "off",
      "@typescript-eslint/no-array-constructor": "error",
      "no-bitwise": "warn",
      "no-caller": "error",
      "no-case-declarations": "error",
      "no-confusing-arrow": "error",
      "no-console": "off",
      "no-continue": "off",
      "no-delete-var": "error",
      "no-div-regex": "off",
      "no-else-return": "warn",
      "no-empty": "warn",
      "no-eq-null": "off",
      "no-eval": "error",
      "no-extend-native": "error",
      "no-extra-boolean-cast": "warn",
      "no-extra-label": "warn",
      "@typescript-eslint/no-extra-semi": "warn",
      "no-floating-decimal": "warn",
      "no-global-assign": "error",
      "no-implicit-coercion": "error",
      "no-implicit-globals": "error",
      "@typescript-eslint/no-implied-eval": "error",
      "no-inline-comments": "warn",
      "@typescript-eslint/no-invalid-this": "error",
      "no-iterator": "error",
      "no-label-var": "off",
      "no-labels": "error",
      "no-lone-blocks": "warn",
      "no-lonely-if": "warn",
      "@typescript-eslint/no-loop-func": "error",
      "no-magic-numbers": "off",
      "no-mixed-operators": "error",
      "no-multi-str": "off",
      "no-negated-condition": "off",
      "no-nested-ternary": "warn",
      "no-new": "off",
      "no-new-func": "error",
      "no-new-object": "error",
      "no-new-wrappers": "error",
      "no-octal": "error",
      "no-octal-escape": "error",
      "no-param-reassign": "off",
      "no-plusplus": "off",
      "no-proto": "error",
      "@typescript-eslint/no-redeclare": "error",
      "no-regex-spaces": "error",
      "no-restricted-exports": "off",
      "no-restricted-globals": "off",
      "@typescript-eslint/no-restricted-imports": "off",
      "no-restricted-properties": "off",
      "no-restricted-syntax": "off",
      "no-return-assign": "error",
      "no-return-await": "off",
      "no-script-url": "error",
      "no-sequences": "error",
      "@typescript-eslint/no-shadow": "warn",
      "no-shadow-restricted-names": "error",
      "no-ternary": "off",
      "@typescript-eslint/no-throw-literal": "error",
      "no-undef-init": "error",
      "no-undefined": "off",
      "no-underscore-dangle": "off",
      "no-unneeded-ternary": "warn",
      "@typescript-eslint/no-unused-expressions": "warn",
      "no-unused-labels": "warn",
      "no-useless-call": "warn",
      "no-useless-catch": "warn",
      "no-useless-computed-key": "warn",
      "no-useless-concat": "off",
      "no-useless-escape": "warn",
      "no-useless-rename": "warn",
      "no-useless-return": "warn",
      "no-var": "error",
      "no-void": "error",
      "no-warning-comments": "off",
      "no-with": "off",
      "object-shorthand": "warn",
      "one-var": ["warn", "never"],
      "one-var-declaration-per-line": "off",
      "operator-assignment": "warn",
      "prefer-arrow-callback": "off",
      "prefer-const": "error",
      "prefer-destructuring": "warn",
      "prefer-exponentiation-operator": "warn",
      "prefer-named-capture-group": "off",
      "prefer-numeric-literals": "off",
      "prefer-object-has-own": "warn",
      "prefer-object-spread": "warn",
      "prefer-promise-reject-errors": "error",
      "prefer-regex-literals": "off",
      "prefer-rest-params": "error",
      "prefer-spread": "warn",
      "prefer-template": "warn",
      "quote-props": ["warn", "as-needed"],
      "radix": "error",
      "require-await": "warn",
      "require-unicode-regexp": "off",
      "require-yield": "error",
      "sort-imports": "off",
      "sort-keys": "off",
      "sort-vars": "off",
      "spaced-comment": "warn",
      "strict": ["error", "never"],
      "symbol-description": "warn",
      "vars-on-top": "off",
      "yoda": "warn",
      "@typescript-eslint/adjacent-overload-signatures": "warn",
      "@typescript-eslint/array-type": ["warn", { "default": "array" }],
      "@typescript-eslint/await-thenable": "error",
      "@typescript-eslint/ban-ts-comment": [
         "warn",
         {
            "ts-expect-error": "allow-with-description",
            "ts-ignore": "allow-with-description",
            "ts-nocheck": "allow-with-description",
            "ts-check": "allow-with-description",
            "minimumDescriptionLength": 3
         }
      ],
      "@typescript-eslint/ban-types": [
         "warn",
         {
            "types": {
               "Object": {
                  "message": "Avoid using the `Object` type. Did you mean `object`?"
               },
               "Function": {
                  "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
               },
               "Boolean": {
                  "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
               },
               "Number": {
                  "message": "Avoid using the `Number` type. Did you mean `number`?"
               },
               "String": {
                  "message": "Avoid using the `String` type. Did you mean `string`?"
               },
               "Symbol": {
                  "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
               }
            }
         }
      ],
      "@typescript-eslint/consistent-generic-constructors": "warn",
      "@typescript-eslint/consistent-indexed-object-style": [
         "warn",
         "index-signature"
      ],
      "@typescript-eslint/consistent-type-assertions": [
         "warn",
         {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "allow-as-parameter"
         }
      ],
      "@typescript-eslint/consistent-type-exports": "warn",
      "@typescript-eslint/consistent-type-imports": "off",
      "@typescript-eslint/explicit-function-return-type": "warn",
      "@typescript-eslint/explicit-member-accessibility": "warn",
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/member-ordering": "warn",
      "@typescript-eslint/method-signature-style": "warn",
      "@typescript-eslint/naming-convention": [
         "warn",
         {
            "selector": "default",
            "format": ["camelCase"],
            "leadingUnderscore": "allow"
         },

         {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE"]
         },
         {
            "selector": "typeLike",
            "format": ["PascalCase"]
         },
         {
            "selector": "enumMember",
            "format": ["UPPER_CASE"]
         },
         {
            "selector": "enum",
            "format": ["PascalCase"]
         },
         {
            "selector": "typeAlias",
            "format": ["PascalCase"],
            "leadingUnderscore": "allow"
         },
         {
            "selector": "objectLiteralProperty",
            "format": null
         }
      ],
      "@typescript-eslint/no-base-to-string": "error",
      "@typescript-eslint/no-confusing-non-null-assertion": "warn",
      "@typescript-eslint/no-confusing-void-expression": [
         "warn",
         {
            "ignoreArrowShorthand": true
         }
      ],
      "@typescript-eslint/no-duplicate-enum-values": "error",
      "@typescript-eslint/no-empty-interface": "warn",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-extra-non-null-assertion": "warn",
      "@typescript-eslint/no-extraneous-class": "off",
      "@typescript-eslint/no-floating-promises": "error",
      "@typescript-eslint/no-for-in-array": "warn",
      "@typescript-eslint/no-inferrable-types": "warn",
      "@typescript-eslint/no-invalid-void-type": "warn",
      "@typescript-eslint/no-meaningless-void-operator": "warn",
      "@typescript-eslint/no-misused-new": "warn",
      "@typescript-eslint/no-misused-promises": "error",
      "@typescript-eslint/no-namespace": "warn",
      "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn",
      "@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
      "@typescript-eslint/no-non-null-assertion": "off",
      "@typescript-eslint/no-redundant-type-constituents": "warn",
      "@typescript-eslint/no-require-imports": "warn",
      "@typescript-eslint/no-this-alias": "error",
      "@typescript-eslint/no-type-alias": "off",
      "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
      "@typescript-eslint/no-unnecessary-condition": "error",
      "@typescript-eslint/no-unnecessary-qualifier": "warn",
      "@typescript-eslint/no-unnecessary-type-arguments": "error",
      "@typescript-eslint/no-unnecessary-type-assertion": "error",
      "@typescript-eslint/no-unnecessary-type-constraint": "error",
      "@typescript-eslint/no-unsafe-argument": "error",
      "@typescript-eslint/no-unsafe-assignment": "error",
      "@typescript-eslint/no-unsafe-call": "error",
      "@typescript-eslint/no-unsafe-declaration-merging": "error",
      "@typescript-eslint/no-unsafe-member-access": "error",
      "@typescript-eslint/no-unsafe-return": "error",
      "@typescript-eslint/no-useless-empty-export": "warn",
      "@typescript-eslint/no-var-requires": "error",
      "@typescript-eslint/parameter-properties": "warn",
      "@typescript-eslint/prefer-as-const": "error",
      "@typescript-eslint/prefer-enum-initializers": "warn",
      "@typescript-eslint/prefer-for-of": "warn",
      "@typescript-eslint/prefer-function-type": "warn",
      "@typescript-eslint/prefer-includes": "warn",
      "@typescript-eslint/prefer-namespace-keyword": "error",
      "@typescript-eslint/prefer-nullish-coalescing": "error",
      "@typescript-eslint/prefer-optional-chain": "error",
      "@typescript-eslint/prefer-readonly": "warn",
      // would use but is broken with imported types
      "@typescript-eslint/prefer-readonly-parameter-types": "off",
      "@typescript-eslint/prefer-reduce-type-parameter": "warn",
      "@typescript-eslint/prefer-return-this-type": "warn",
      "@typescript-eslint/prefer-string-starts-ends-with": "warn",
      "@typescript-eslint/prefer-ts-expect-error": "error",
      "@typescript-eslint/require-array-sort-compare": [
         "error",
         { "ignoreStringArrays": true }
      ],
      "@typescript-eslint/restrict-plus-operands": "error",
      "@typescript-eslint/restrict-template-expressions": "error",
      "@typescript-eslint/strict-boolean-expressions": "warn",
      "@typescript-eslint/switch-exhaustiveness-check": "error",
      "@typescript-eslint/triple-slash-reference": "error",
      "@typescript-eslint/unbound-method": "error",
      "@typescript-eslint/unified-signatures": "warn",
      "@typescript-eslint/no-empty-function": [
         "warn",
         { "allow": ["arrowFunctions"] }
      ],
      "@typescript-eslint/no-useless-constructor": "warn"
   },
   "ignorePatterns": [
      "node_modules/",
      "dist/",
      "*.test.ts",
      "*.spec.ts",
      "tests/*",
      "vitest.config.ts"
   ]
}
